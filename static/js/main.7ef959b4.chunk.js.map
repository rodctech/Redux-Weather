{"version":3,"sources":["components/Spinner.js","apis/openWeather.js","apis/openCage.js","actions/index.js","components/WeatherDay.js","components/WeatherDetail.js","components/SearchInput.js","components/City.js","components/App.js","reducers/index.js","reducers/weatherReducer.js","index.js"],"names":["Spinner","react_default","a","createElement","className","axios","create","baseURL","getLocalWeather","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","newLocation","newWeather","currentCity","wrap","_context","prev","next","fetchLocation","sent","fetchWeather","fetchCurrentCity","type","payload","stop","_x","apply","this","arguments","_ref3","lat","lng","Promise","_ref4","_callee3","success","error","response","gridURL","forecast","_context3","weatherData","get","concat","data","properties","periods","t0","_x3","_x4","_ref5","_callee4","_context4","window","navigator","geolocation","getCurrentPosition","position","positionResponse","coords","latitude","longitude","err","_x5","_x6","_ref6","_ref7","_callee5","_context5","addressData","results","components","_x7","_x8","onDaySelect","day","night","_ref8","_callee6","selectedDay","_context6","_x9","WeatherDay","props","_this","dayWeather","weather","filter","e","isDaytime","undefined","components_Spinner","map","key","startTime","onClick","number","name","src","icon","alt","temperature","Component","connect","state","weatherReducer","WeatherDetail","renderDays","nightWeather","detailedForecast","SearchInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","address","setState","handleSelect","geocodeByAddress","then","getLatLng","latLng","getInputWeather","catch","console","dist_default","value","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","suggestion","active","style","backgroundColor","cursor","description","React","_ref2","_callee2","_context2","_x2","City","locationData","city","town","village","state_code","App","id","components_SearchInput","components_City","components_WeatherDay","components_WeatherDetail","role","aria-label","combineReducers","length","search","action","objectSpread","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","src_components_App","document","querySelector"],"mappings":"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","file":"static/js/main.7ef959b4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"ui active dimmer\">\n      <div className=\"ui big text loader\">Loading... </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://api.weather.gov\"\n});\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://api.opencagedata.com/geocode/v1/json\"\n});\n","import axios from \"axios\";\nimport weatherData from \"../apis/openWeather\";\nimport addressData from \"../apis/openCage\";\n\nexport const FETCH_WEATHER = \"FETCH_WEATHER\";\nexport const SEARCH = \"SEARCH\";\nexport const FETCH_LOCATION = \"FETCH_LOCATION\";\nexport const SELECTED_DAY = \"SELECTED_DAY\";\n\nexport const getLocalWeather = () => async dispatch => {\n  let newLocation = await fetchLocation();\n  let newWeather = await fetchWeather(newLocation);\n  let currentCity = await fetchCurrentCity(newLocation);\n\n  dispatch({ type: FETCH_WEATHER, payload: newWeather });\n  dispatch({ type: FETCH_LOCATION, payload: currentCity });\n};\n\nexport const getInputWeather = latLng => async dispatch => {\n  let newLocation = latLng;\n  let newWeather = await fetchWeather(newLocation);\n  let currentCity = await fetchCurrentCity(newLocation);\n\n  dispatch({ type: FETCH_WEATHER, payload: newWeather });\n  dispatch({ type: FETCH_LOCATION, payload: currentCity });\n};\n\nexport const fetchWeather = ({ lat, lng }) => {\n  return new Promise(async (success, error) => {\n    try {\n      const response = await weatherData.get(`/points/${lat},${lng}`);\n      const gridURL = response.data.properties.forecast;\n      const forecast = await axios.get(gridURL);\n      success(forecast.data.properties.periods);\n    } catch (err) {\n      error(err);\n    }\n  });\n};\n\nexport const fetchLocation = () => {\n  return new Promise(async (success, error) => {\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        const positionResponse = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n\n        success(positionResponse);\n      },\n      err => {\n        error(err);\n      }\n    );\n  });\n};\n\nexport const fetchCurrentCity = ({ lat, lng }) => {\n  return new Promise(async (success, error) => {\n    try {\n      const response = await addressData.get(\n        `?q=${lat}+${lng}&key=bf6078b1e5eb41e38e78ea3209e0817c`\n      );\n\n      success(response.data.results[0].components);\n    } catch (err) {\n      error(err);\n    }\n  });\n};\n\nexport const onDaySelect = (day, night) => async dispatch => {\n  let selectedDay = await [day, night];\n  dispatch({ type: SELECTED_DAY, payload: selectedDay });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"./Spinner\";\nimport {\n  fetchWeather,\n  fetchLocation,\n  getLocalWeather,\n  onDaySelect\n} from \"../actions\";\n\nclass WeatherDay extends Component {\n  componentDidMount() {\n    this.props.getLocalWeather();\n  }\n\n  render() {\n    const weather = this.props.weather.weatherData;\n    const dayWeather = weather.filter(e => {\n      return e.isDaytime === true;\n    });\n\n    if (this.props.weather.weatherData[0] === undefined) {\n      return (\n        <div className=\"spinner\">\n          <Spinner />\n        </div>\n      );\n    }\n\n    return dayWeather.map(e => {\n      return (\n        <div\n          className=\"ui segment\"\n          key={e.startTime}\n          onClick={() => this.props.onDaySelect(e.number, e.number + 1)}\n        >\n          <div className=\"ui center  aligned header\">{e.name}</div>\n          <div className=\"ui center  aligned header\">\n            <div className=\"ui center  aligned  header\">\n              <img\n                className=\"ui medium circular image\"\n                src={e.icon}\n                alt=\"icon\"\n              />\n            </div>\n            <div className=\"ui center aligned  header\">{e.temperature}</div>\n          </div>\n        </div>\n      );\n    });\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    weather: state.weatherReducer\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchWeather, fetchLocation, getLocalWeather, onDaySelect }\n)(WeatherDay);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchWeather,\n  fetchLocation,\n  getLocalWeather,\n  onDaySelect\n} from \"../actions\";\nclass WeatherDetail extends Component {\n  componentDidUpdate() {}\n\n  render() {\n    const renderDays = this.props.weather.selectedDay;\n    const weather = this.props.weather.weatherData;\n    if (!this.props.weather.selectedDay) {\n      return (\n        <div className=\"ui container segment papaya\">\n          To seedetailed forcast please click on a day...\n        </div>\n      );\n    }\n    const dayWeather = weather.filter(e => {\n      return e.number === renderDays[0];\n    });\n    const nightWeather = weather.filter(e => {\n      return e.number === renderDays[1];\n    });\n    return (\n      <div className=\"details\">\n        <div className=\"ui segments \">\n          <div className=\"ui segment papaya\">\n            <h2>{dayWeather[0].name}</h2>\n            <img\n              className=\"ui centered rounded small image\"\n              src={dayWeather[0].icon}\n              alt=\"icon\"\n            />\n\n            <h5 className={\"detailForecast\"}>\n              {dayWeather[0].detailedForecast}\n            </h5>\n          </div>\n          <div className=\"ui secondary segment night \">\n            <h2>{nightWeather[0].name}</h2>\n            <img\n              className=\"ui centered rounded small image\"\n              src={nightWeather[0].icon}\n              alt=\"icon\"\n            />\n\n            <h5 className={\"detailForecast\"}>\n              {nightWeather[0].detailedForecast}\n            </h5>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    weather: state.weatherReducer\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchWeather, fetchLocation, getLocalWeather, onDaySelect }\n)(WeatherDetail);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\n//import { FETCH_WEATHER, FETCH_LOCATION } from \"../actions\";\nimport { fetchWeather, getInputWeather } from \"../actions\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng\n} from \"react-places-autocomplete\";\n\nclass SearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: \"\" };\n  }\n\n  handleChange = address => {\n    this.setState({ address });\n  };\n\n  handleSelect = address => {\n    geocodeByAddress(address)\n      .then(this.setState({ address: address }))\n      .then(results => getLatLng(results[0]))\n      .then(latLng => this.props.getInputWeather(latLng))\n      .catch(error => console.error(\"Error\", error));\n  };\n\n  render() {\n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div className=\"ui container\">\n            <div className=\"ui fluid input\">\n              <input\n                {...getInputProps({\n                  placeholder: \"Search Places ...\",\n                  className: \"location-search-input\"\n                })}\n              />\n            </div>\n\n            <div className=\"auto-complete\">\n              {loading && <div>Loading...</div>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? \"suggestion-item--active\"\n                  : \"suggestion-item\";\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                  : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    weather: state.weatherReducer\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchWeather, getInputWeather }\n)(SearchInput);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass City extends React.Component {\n  render() {\n    return (\n      <div className=\"white \">\n        Currently Displaying Weather For:\n        <br />\n        {this.props.weather.locationData.city ||\n          this.props.weather.locationData.town ||\n          this.props.weather.locationData.village}\n        , {this.props.weather.locationData.state_code}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    weather: state.weatherReducer\n  };\n};\nexport default connect(mapStateToProps)(City);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport WeatherDay from \"./WeatherDay\";\nimport WeatherDetail from \"./WeatherDetail\";\nimport SearchInput from \"./SearchInput\";\nimport City from \"./City\";\n\nimport \"./App.css\";\nclass App extends React.Component {\n  render() {\n    return (\n      <div id=\"wrapper\">\n        <div className=\"ui container\">\n          <h1 className=\"ui center white aligned header\"> Weather App </h1>\n          <SearchInput />\n          <City />\n\n          <div className=\"ui container horizontal segments\">\n            <WeatherDay />\n          </div>\n          <WeatherDetail />\n        </div>\n        <div id=\"footer\">\n          {\" \"}\n          <p className=\"love\">\n            Made with{\" \"}\n            <span role=\"img\" aria-label=\"Heart\">\n              ❤️\n            </span>{\" \"}\n            in Chicago\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    weather: state.weatherReducer\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from \"redux\";\nimport { weatherReducer } from \"./weatherReducer\";\n\nexport default combineReducers({\n  weatherReducer: weatherReducer\n});\n","import {\n  FETCH_WEATHER,\n  FETCH_LOCATION,\n  SELECTED_DAY,\n  SEARCH\n} from \"../actions\";\n\nexport const weatherReducer = (\n  state = {\n    weatherData: [],\n    locationData: [],\n    selectedDay: null,\n    search: null\n  },\n  action\n) => {\n  switch (action.type) {\n    case FETCH_WEATHER:\n      return { ...state, weatherData: action.payload };\n    case FETCH_LOCATION:\n      return { ...state, locationData: action.payload };\n    case SELECTED_DAY:\n      return { ...state, selectedDay: action.payload };\n    case SEARCH:\n      return { ...state, search: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}